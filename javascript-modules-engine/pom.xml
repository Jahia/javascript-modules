<?xml version="1.0" encoding="UTF-8"?>
<!--

   Copyright (C) 2002-2024 Jahia Solutions Group SA. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>javascript-modules</artifactId>
        <groupId>org.jahia.modules</groupId>
        <version>0.5.0-SNAPSHOT</version>
    </parent>
    <artifactId>javascript-modules-engine</artifactId>
    <name>Javascript Modules Engine</name>
    <packaging>bundle</packaging>
    <description>This is the engine allowing Javascript modules to run on a Jahia server.</description>

    <properties>
        <jahia-module-signature>MCwCFDQdK92z1BXV1vfSZzYMWkO5olzRAhQGfHtUiLZ2QTgPd/PWwMpBL5EA2A==</jahia-module-signature>
        <import-package>
            graphql.annotations.annotationTypes;version="[7.2,99)",
            graphql.schema;version="[13.0,22)",
            org.jahia.modules.graphql.provider.dxm;version="[2.7,4)",
            org.jahia.modules.graphql.provider.dxm.node;version="[2.7,4)",
            org.jahia.modules.graphql.provider.dxm.osgi.annotations;version="[2.7,4)",
            org.jahia.modules.graphql.provider.dxm.util;version="[2.7,4)",
        </import-package>
        <require-capability>osgi.ee;filter:="(&amp;(osgi.ee=JavaSE)(version&gt;=17))"</require-capability>
        <!--  Since React 19 and new JSX transformation, in production, all other jsmodules should be production  -->
        <!--  To get a full compatibility, we use dev mode by default  -->
        <yarn-build>build:development</yarn-build>
    </properties>

    <dependencies>
         <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.annotation</artifactId>
            <version>${osgi.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.ops4j.pax.swissbox</groupId>
            <artifactId>pax-swissbox-bnd</artifactId>
            <version>1.8.3</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.fileinstall</artifactId>
            <version>${felix.fileinstall.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.26</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.graalvm.sdk</groupId>
            <artifactId>graal-sdk</artifactId>
            <version>${graalvm.sdk.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.9.0</version>
        </dependency>

        <dependency>
            <groupId>org.jahia.modules</groupId>
            <artifactId>graphql-dxm-provider</artifactId>
            <version>2.7.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.github.graphql-java</groupId>
            <artifactId>graphql-java-annotations</artifactId>
            <version>${graphql-java-annotations.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>pl.touk</groupId>
            <artifactId>throwing-function</artifactId>
            <version>1.3</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>javascript-modules-library</artifactId>
            <version>${project.version}</version>
            <type>tgz</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>javascript-modules-engine-java</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <_dsannotations>*</_dsannotations>
                    </instructions>
                    <!-- because the Java classes of javascript-modules-engine-java are unpacked into the target/classes folder, -->
                    <!-- the dependency can and should be excluded to avoid duplicates -->
                    <excludeDependencies>javascript-modules-engine-java</excludeDependencies>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <!-- equivalent of 'yarn clean-server' -->
                            <directory>${project.basedir}/src/main/resources/META-INF/js/</directory>
                        </fileset>
                        <fileset>
                            <!-- equivalent of 'yarn clean-client' -->
                            <directory>${project.basedir}/src/main/resources/javascript/</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-javascript-modules-engine-java</id>
                        <!-- unzip the .jar with the Java classes so from an OSGI standpoint, it's equivalent to have the Java sources in this module -->
                        <phase>process-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>javascript-modules-engine-java</artifactId>
                                    <version>${project.version}</version>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <configuration>
                    <environmentVariables>
                        <NODE_OPTIONS>--openssl-legacy-provider</NODE_OPTIONS>
                    </environmentVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>npm install node and yarn</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>yarn install</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>yarn post-install</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>${yarn-build}</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>17</release>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <yarn-build>build:development</yarn-build>
            </properties>
        </profile>
        <profile>
            <id>release-prepare</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- by default on CI environment, yarn has the "immutable" option set -->
                        <!-- however, during the release preparation process (i.e. with the "release-prepare" profile enabled),
                        it must be explicitly disabled to recompute the checksums in the yarn.lock files after the version change -->
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <arguments>--no-immutable</arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
