import { globSync } from "tinyglobby";
import type { Plugin } from "rollup";

const VIRTUAL_ENTRY_ID = "\0virtual:entry";

/**
 * This plugin is a fork of the original `@rollup/plugin-multi-entry` plugin, with
 * https://github.com/rollup/plugins/pull/1879 merged and unused features removed.
 *
 * Originally licensed under MIT:
 *
 * Copyright (c) 2019 RollupJS Plugin Contributors
 * (https://github.com/rollup/plugins/graphs/contributors)
 */
export function multiEntry(entryFileName: string): Plugin {
  let patterns: string[] = [];
  let entrypoint = "";

  return {
    name: "multi-entry",

    options(options) {
      if (options.input !== entryFileName) {
        if (typeof options.input === "string") {
          patterns = [options.input];
        } else if (Array.isArray(options.input)) {
          patterns = options.input;
        } else {
          throw new TypeError("options.input must be a string or an array of strings");
        }
      }

      return {
        ...options,
        input: entryFileName,
      };
    },

    buildStart() {
      const files = globSync(patterns, { absolute: true });
      entrypoint = files
        .sort()
        .map((path) => `import ${JSON.stringify(path)};\n`)
        .join("");
    },

    outputOptions(options) {
      return {
        ...options,
        // Overwrite the entry file name to be `entryFileName` instead of _virtual_entry.js
        // (generated by Rollup from VIRTUAL_ENTRY_ID)
        entryFileNames: entryFileName,
      };
    },

    resolveId(id) {
      if (id === entryFileName) return VIRTUAL_ENTRY_ID;
    },

    load(id) {
      if (id === VIRTUAL_ENTRY_ID) return entrypoint;
    },
  };
}
