<?xml version="1.0" encoding="UTF-8"?>
<!--

   Copyright (C) 2002-2024 Jahia Solutions Group SA. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>jahia-modules</artifactId>
        <groupId>org.jahia.modules</groupId>
        <version>8.2.0.0</version>
    </parent>
    <artifactId>javascript-modules</artifactId>
    <name>Javascript Modules</name>
    <version>0.5.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>Multi-module project with the backend engine and the frontend library allowing Javascript modules to
        run on a Jahia server.
    </description>

    <scm>
        <connection>scm:git:git@github.com:Jahia/javascript-modules.git</connection>
        <developerConnection>scm:git:git@github.com:Jahia/javascript-modules.git</developerConnection>
        <url>scm:git:git@github.com:Jahia/javascript-modules.git</url>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>javascript-modules-engine</module>
        <module>javascript-modules-engine-java</module>
        <module>javascript-modules-library</module>
    </modules>

    <properties>
        <graalvm.sdk.version>23.0.2</graalvm.sdk.version>
        <!-- override the version of org.sonatype.plugins:nexus-staging-maven-plugin to ensure compatibility with JDK 17 -->
        <nexus.maven.plugin.version>1.7.0</nexus.maven.plugin.version>
        <!-- frontend-maven-plugin requires to use yarn 1.22.x as a "bootstrap" but then, the .yarnrc.yml will be detected and Yarn Berry (4+) will be used -->
        <frontend-maven-plugin.yarn.version>v1.22.22</frontend-maven-plugin.yarn.version>
        <frontend-maven-plugin.node.version>v22.10.0</frontend-maven-plugin.node.version>
        <frontend-maven-plugin.npm.version>11.1.0</frontend-maven-plugin.npm.version>
    </properties>

    <repositories>
        <repository>
            <id>jahia-public</id>
            <name>Jahia Public Repository</name>
            <url>https://devtools.jahia.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <build>
        <pluginManagement>
            <!-- define plugins versions not set in parent pom -->
            <plugins>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.15.1</version>
                    <configuration>
                        <nodeVersion>${frontend-maven-plugin.node.version}</nodeVersion>
                        <yarnVersion>${frontend-maven-plugin.yarn.version}</yarnVersion>
                        <npmVersion>${frontend-maven-plugin.npm.version}</npmVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <!-- when releasing, the checksum of the javascript-modules-library package in the yarn.lock files changes -->
                    <!-- 'clean verify/install' is used to recompute the checksum of the yarn.lock files as part of the regular Maven build -->
                    <!-- scm:checkin allows to commit those files -->
                    <preparationGoals>-P release-prepare clean verify scm:checkin</preparationGoals>
                    <completionGoals>-P release-prepare clean install scm:checkin</completionGoals>
                    <releaseProfiles>release-perform</releaseProfiles>
                    <useReleaseProfile>true</useReleaseProfile>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>release-prepare</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-scm-plugin</artifactId>
                        <configuration>
                            <includes>
                                javascript-modules-engine/yarn.lock,jahia-test-module/yarn.lock
                            </includes>
                            <message>[skip ci] [maven-release-plugin] Update yarn.lock files for version
                                ${project.version}
                            </message>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
